// <auto-generated />
using System;
using Aplicacion_Web2;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Aplicacion_Web2.Migrations
{
    [DbContext(typeof(ApplicationDBContext))]
    [Migration("20221101035836_Inicial1")]
    partial class Inicial1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Aplicacion_Web2.Entitys.Consulta_Doctor", b =>
                {
                    b.Property<string>("id_ConsultaDoctor")
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.Property<string>("consultamedicaid_ConsultaMedica")
                        .HasColumnType("nvarchar(5)");

                    b.Property<string>("diagnosticoConsultaDoctor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("doctorid_doctor")
                        .HasColumnType("int");

                    b.Property<int>("fondoOjo")
                        .HasColumnType("int");

                    b.Property<string>("observaciones")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("presionOcular")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id_ConsultaDoctor");

                    b.HasIndex("consultamedicaid_ConsultaMedica");

                    b.HasIndex("doctorid_doctor");

                    b.ToTable("Consulta_Doctor");
                });

            modelBuilder.Entity("Aplicacion_Web2.Entitys.Consulta_Medica", b =>
                {
                    b.Property<string>("id_ConsultaMedica")
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.Property<int?>("historiaclinicaid_historia_clinica")
                        .HasColumnType("int");

                    b.Property<string>("motivoConsulta")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id_ConsultaMedica");

                    b.HasIndex("historiaclinicaid_historia_clinica");

                    b.ToTable("Consulta_Medica");
                });

            modelBuilder.Entity("Aplicacion_Web2.Entitys.Consulta_Optometra", b =>
                {
                    b.Property<string>("id_consulta_optometra")
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.Property<int>("Agudeza_Visual")
                        .HasColumnType("int");

                    b.Property<string>("Consulta_Medicaid_ConsultaMedica")
                        .HasColumnType("nvarchar(5)");

                    b.Property<int>("Medida_vista_computarizada")
                        .HasColumnType("int");

                    b.Property<int>("Medida_vista_final")
                        .HasColumnType("int");

                    b.Property<string>("Observaciones")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Optometraid_Optometra")
                        .HasColumnType("nvarchar(5)");

                    b.Property<int>("Queratometria")
                        .HasColumnType("int");

                    b.HasKey("id_consulta_optometra");

                    b.HasIndex("Consulta_Medicaid_ConsultaMedica");

                    b.HasIndex("Optometraid_Optometra");

                    b.ToTable("Consulta_Optometra");
                });

            modelBuilder.Entity("Aplicacion_Web2.Entitys.Doctor", b =>
                {
                    b.Property<int>("id_doctor")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("apellido_doctor")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("correo_doctor")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("dni_doctor")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)");

                    b.Property<string>("genero_doctor")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<int>("id_Usuario")
                        .HasColumnType("int");

                    b.Property<string>("nombre_doctor")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("telefono_doctor")
                        .IsRequired()
                        .HasMaxLength(9)
                        .HasColumnType("nvarchar(9)");

                    b.Property<int?>("usuarioid_Usuario")
                        .HasColumnType("int");

                    b.HasKey("id_doctor");

                    b.HasIndex("usuarioid_Usuario");

                    b.ToTable("Doctor");
                });

            modelBuilder.Entity("Aplicacion_Web2.Entitys.Historia_Clinica", b =>
                {
                    b.Property<int>("id_historia_clinica")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("alergias")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("apellidospaciente")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("correopaciente")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("dnipaciente")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)");

                    b.Property<int>("edadpaciente")
                        .HasColumnType("int");

                    b.Property<string>("enfermedad_personal")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("enfermedades_oculares")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("estadocivilpaciente")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<bool>("estadohistoriaclinica")
                        .HasColumnType("bit");

                    b.Property<DateTime>("fechanacimientopaciente")
                        .HasColumnType("datetime2");

                    b.Property<string>("generopaciente")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("motivo_consulta")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("nombrepaciente")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("operaciones")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("telefonopaciente")
                        .IsRequired()
                        .HasMaxLength(9)
                        .HasColumnType("nvarchar(9)");

                    b.Property<string>("uso_medicamentos")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("id_historia_clinica");

                    b.ToTable("Historia_Clinica");
                });

            modelBuilder.Entity("Aplicacion_Web2.Entitys.Optometra", b =>
                {
                    b.Property<string>("id_Optometra")
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.Property<string>("apellidosOptometra")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("correoOptometra")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("dniOptometra")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)");

                    b.Property<string>("generoOptometra")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("nombreOptometra")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("telefonoOptometra")
                        .IsRequired()
                        .HasMaxLength(9)
                        .HasColumnType("nvarchar(9)");

                    b.Property<int?>("usuarioid_Usuario")
                        .HasColumnType("int");

                    b.HasKey("id_Optometra");

                    b.HasIndex("usuarioid_Usuario");

                    b.ToTable("Optometra");
                });

            modelBuilder.Entity("Aplicacion_Web2.Entitys.Paciente", b =>
                {
                    b.Property<string>("id_paciente")
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.Property<int?>("Historia_Clinicaid_historia_clinica")
                        .HasColumnType("int");

                    b.Property<string>("apellidospaciente")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("correopaciente")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("dnipaciente")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)");

                    b.Property<int>("edadpaciente")
                        .HasColumnType("int");

                    b.Property<string>("estadocivilpaciente")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<DateTime>("fechanacimientopaciente")
                        .HasColumnType("datetime2");

                    b.Property<string>("generopaciente")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("nombrepaciente")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("telefonopaciente")
                        .IsRequired()
                        .HasMaxLength(9)
                        .HasColumnType("nvarchar(9)");

                    b.HasKey("id_paciente");

                    b.HasIndex("Historia_Clinicaid_historia_clinica");

                    b.ToTable("Paciente");
                });

            modelBuilder.Entity("Aplicacion_Web2.Entitys.Receta", b =>
                {
                    b.Property<string>("id_Receta")
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.Property<int>("cantidad")
                        .HasColumnType("int");

                    b.Property<string>("consultaDoctorid_ConsultaDoctor")
                        .HasColumnType("nvarchar(5)");

                    b.Property<DateTime>("fechaReceta")
                        .HasColumnType("datetime2");

                    b.Property<string>("indicacionesReceta")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id_Receta");

                    b.HasIndex("consultaDoctorid_ConsultaDoctor");

                    b.ToTable("Receta");
                });

            modelBuilder.Entity("Aplicacion_Web2.Entitys.Reserva_Cita", b =>
                {
                    b.Property<string>("id_Reserva")
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.Property<int?>("doctorid_doctor")
                        .HasColumnType("int");

                    b.Property<DateTime>("fechaReserva")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("horaReserva")
                        .HasColumnType("datetime2");

                    b.Property<string>("motivo")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("pacienteid_paciente")
                        .HasColumnType("nvarchar(5)");

                    b.HasKey("id_Reserva");

                    b.HasIndex("doctorid_doctor");

                    b.HasIndex("pacienteid_paciente");

                    b.ToTable("Reserva_Cita");
                });

            modelBuilder.Entity("Aplicacion_Web2.Entitys.Secretaria", b =>
                {
                    b.Property<int>("id_Secretaria")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("apellidosSecretaria")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("correoSecretaria")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("dniSecretaria")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)");

                    b.Property<string>("generoSecretaria")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<int>("id_Usuario")
                        .HasColumnType("int");

                    b.Property<string>("nombreSecretaria")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("telefonoSecretaria")
                        .IsRequired()
                        .HasMaxLength(9)
                        .HasColumnType("nvarchar(9)");

                    b.Property<int?>("usuarioid_Usuario")
                        .HasColumnType("int");

                    b.HasKey("id_Secretaria");

                    b.HasIndex("usuarioid_Usuario");

                    b.ToTable("Secretaria");
                });

            modelBuilder.Entity("Aplicacion_Web2.Entitys.Usuario", b =>
                {
                    b.Property<int>("id_Usuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("contraseñaUsuario")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nombreUsuario")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id_Usuario");

                    b.ToTable("Usuario");
                });

            modelBuilder.Entity("Aplicacion_Web2.Entitys.Consulta_Doctor", b =>
                {
                    b.HasOne("Aplicacion_Web2.Entitys.Consulta_Medica", "consultamedica")
                        .WithMany()
                        .HasForeignKey("consultamedicaid_ConsultaMedica");

                    b.HasOne("Aplicacion_Web2.Entitys.Doctor", "doctor")
                        .WithMany()
                        .HasForeignKey("doctorid_doctor");

                    b.Navigation("consultamedica");

                    b.Navigation("doctor");
                });

            modelBuilder.Entity("Aplicacion_Web2.Entitys.Consulta_Medica", b =>
                {
                    b.HasOne("Aplicacion_Web2.Entitys.Historia_Clinica", "historiaclinica")
                        .WithMany()
                        .HasForeignKey("historiaclinicaid_historia_clinica");

                    b.Navigation("historiaclinica");
                });

            modelBuilder.Entity("Aplicacion_Web2.Entitys.Consulta_Optometra", b =>
                {
                    b.HasOne("Aplicacion_Web2.Entitys.Consulta_Medica", "Consulta_Medica")
                        .WithMany()
                        .HasForeignKey("Consulta_Medicaid_ConsultaMedica");

                    b.HasOne("Aplicacion_Web2.Entitys.Optometra", "Optometra")
                        .WithMany()
                        .HasForeignKey("Optometraid_Optometra");

                    b.Navigation("Consulta_Medica");

                    b.Navigation("Optometra");
                });

            modelBuilder.Entity("Aplicacion_Web2.Entitys.Doctor", b =>
                {
                    b.HasOne("Aplicacion_Web2.Entitys.Usuario", "usuario")
                        .WithMany()
                        .HasForeignKey("usuarioid_Usuario");

                    b.Navigation("usuario");
                });

            modelBuilder.Entity("Aplicacion_Web2.Entitys.Optometra", b =>
                {
                    b.HasOne("Aplicacion_Web2.Entitys.Usuario", "usuario")
                        .WithMany()
                        .HasForeignKey("usuarioid_Usuario");

                    b.Navigation("usuario");
                });

            modelBuilder.Entity("Aplicacion_Web2.Entitys.Paciente", b =>
                {
                    b.HasOne("Aplicacion_Web2.Entitys.Historia_Clinica", "Historia_Clinica")
                        .WithMany()
                        .HasForeignKey("Historia_Clinicaid_historia_clinica");

                    b.Navigation("Historia_Clinica");
                });

            modelBuilder.Entity("Aplicacion_Web2.Entitys.Receta", b =>
                {
                    b.HasOne("Aplicacion_Web2.Entitys.Consulta_Doctor", "consultaDoctor")
                        .WithMany()
                        .HasForeignKey("consultaDoctorid_ConsultaDoctor");

                    b.Navigation("consultaDoctor");
                });

            modelBuilder.Entity("Aplicacion_Web2.Entitys.Reserva_Cita", b =>
                {
                    b.HasOne("Aplicacion_Web2.Entitys.Doctor", "doctor")
                        .WithMany()
                        .HasForeignKey("doctorid_doctor");

                    b.HasOne("Aplicacion_Web2.Entitys.Paciente", "paciente")
                        .WithMany()
                        .HasForeignKey("pacienteid_paciente");

                    b.Navigation("doctor");

                    b.Navigation("paciente");
                });

            modelBuilder.Entity("Aplicacion_Web2.Entitys.Secretaria", b =>
                {
                    b.HasOne("Aplicacion_Web2.Entitys.Usuario", "usuario")
                        .WithMany()
                        .HasForeignKey("usuarioid_Usuario");

                    b.Navigation("usuario");
                });
#pragma warning restore 612, 618
        }
    }
}
